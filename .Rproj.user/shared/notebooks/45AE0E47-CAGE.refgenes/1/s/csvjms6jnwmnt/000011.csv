"0","#### Import transcript and gene (cluster) counts"
"0","TR.gene.cluster <- fread(paste0(outdir, '/', 'TR.gene.cluster.tsv'), na.strings = '')"
"0",""
"0",""
"0","#### Import Toram et al annotation transferred from Kaplan"
"0","source('import.ref.TRs.R')"
"2","Warning in .local(con, format, text, ...) :"
"2","
 "
"2"," gff-version directive indicates version is 	3							, not 3
"
"2","Warning in .local(object, con, format, ...) :"
"2","
 "
"2"," The phase information is missing for
  some CDS. The written file will contain
  some CDS with no phase information.
"
"2","Warning in .local(object, con, format, ...) :"
"2","
 "
"2"," The phase information is missing for
  some CDS. The written file will contain
  some CDS with no phase information.
"
"2","Warning in .local(object, con, format, ...) :"
"2","
 "
"2"," The phase information is missing for
  some CDS. The written file will contain
  some CDS with no phase information.
"
"0","#### Reference annotation with CAGE results"
"0","TR.merged.data <- fread(paste0(outdir, '/TR.Ref.data.CAGE.tsv'))"
"0",""
"0","#### Read-transcripts counts with adapter info"
"0","TR.adapt.count  <- fread(paste0(outdir, '/TR.adapt.count.tsv'), na.strings = '')"
"0",""
"0","#### consider adapters?"
"0","# possible values : adapters <- 'both' | 'either' | 'any' | 'prime5' | 'prime3'"
"0","adapters <- 'both'"
"0","       if(adapters == 'both') {"
"0","  TR.adapt.filt <- TR.adapt.count[correct_tss == T & correct_tes == T]"
"0","  "
"0","} else if(adapters == 'either') {"
"0","  TR.adapt.filt <- TR.adapt.count[correct_tss == T | correct_tes == T, .(count = sum(count)), by=.(seqnames, strand, TR_ID, sample)]"
"0","  "
"0","} else if(adapters == 'any') {"
"0","  TR.adapt.filt <- TR.adapt.count[, .(count = sum(count)), by=.(seqnames, strand, TR_ID, sample)]"
"0","  "
"0","} else if(adapters == 'prime5') {"
"0","  TR.adapt.filt <- TR.adapt.count[correct_tss == T, .(count = sum(count)), by=.(seqnames, strand, TR_ID, sample)]"
"0","  "
"0","} else if(adapters == 'prime3') {"
"0","  TR.adapt.filt <- TR.adapt.count[correct_tes == T, .(count = sum(count)), by=.(seqnames, strand, TR_ID, sample)]"
"0","  "
"0","}"
"0","setnames(TR.adapt.filt, 'TR_ID', 'transcript_id')"
"0",""
"0","###### Merge with read-transcript counts (possible filtered) #####"
"0","TR.gene.cluster.counts <- merge(TR.gene.cluster, "
"0","                                TR.adapt.filt[,.(sample, transcript_id, count)],"
"0","                                by=c('transcript_id')"
"0","                                #all.x=T, "
"0","                                #allow.cartesian=TRUE"
"0","                                )"
"0",""
"0",""
"0",""
"0",""
"0","#### summarise read-transcripts into ref transcripts"
"0","TR.ref.sum      <- TR.gene.cluster.counts[,.(read_count = sum(count)),  "
"0","  by=.(seqnames, gene_region, gene_cluster, gene, cmp_ref, Ref_Class, class_code, Kinetic_class, sample)]"
"0",""
"0",""
"0","## melt to get 0 counts"
"0","orf.counts <- dcast(TR.ref.sum, seqnames + gene_region + gene_cluster + gene + Kinetic_class + Ref_Class + class_code + cmp_ref ~ sample, value.var = 'read_count')"
"0","orf.perc   <- melt(orf.counts, variable.name = 'sample', value.name = 'read_count', id.vars = colnames(orf.counts)[1:8])"
"0","orf.perc[is.na(read_count), read_count := 0]"
"0",""
"0","TR.ref.sum   <- orf.perc"
"0","## merge back for transcript strand"
"0","TR.ref.sum  <- merge(unique(TR.genes[,.(seqnames, strand, transcript_id)]), "
"0","                     TR.ref.sum, by.y=c('seqnames', 'cmp_ref'), by.x=c('seqnames', 'transcript_id'))"
"0","setnames(TR.ref.sum, 'transcript_id', 'cmp_ref')"
"0","## and metadata"
"0","TR.ref.sum  <- merge(TR.ref.sum, metafilt[,metacols], by=c('sample'), all.x=T)"
"0",""
"0",""
"0",""
"0","## Factorize Kinetic classes"
"0","TR.ref.sum[is.na(Kinetic_class), Kinetic_class := 'unknown']"
"0","TR.ref.sum[,Kinetic_class := factor(Kinetic_class, levels = c('IE', 'IE/E', 'E', 'IE/E/L', 'E/L', 'L', 'unknown'))]"
"0",""
"0",""
